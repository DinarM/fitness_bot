# from aiogram import Dispatcher
# from aiogram_dialog import Dialog, Window
# from aiogram_dialog.widgets.kbd import Button, Row, RequestContact
# from aiogram_dialog.widgets.text import Const
# from aiogram_dialog.widgets.markup.reply_keyboard import ReplyKeyboardFactory
# from aiogram.fsm.state import StatesGroup, State


# class StartSG(StatesGroup):
#     ask_contact = State()
#     main_menu = State()


# async def on_contact(c, button, dialog_manager):
#     # –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç: c.from_user.id, c.from_user.phone_number
#     await dialog_manager.switch_to(StartSG.main_menu)


# async def on_menu_click(c, button, dialog_manager, **kwargs):
#     choice = button.widget_id  # "test" –∏–ª–∏ "workout"
#     if choice == "test":
#         await c.message.answer("–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç‚Ä¶")
#         # —Ç—É—Ç –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≤–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
#     else:
#         await c.message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º‚Ä¶")
#         # —Ç—É—Ç –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫


# ask_contact_window = Window(
#     Const("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º:"),
#     RequestContact(Const("üì≤ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º")),
#     state=StartSG.ask_contact,
#     markup_factory=ReplyKeyboardFactory(resize_keyboard=True),
# )

# main_menu_window = Window(
#     Const("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"),
#     Row(
#         Button(Const("üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"), id="test", on_click=on_menu_click),
#         Button(Const("üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"),   id="workout", on_click=on_menu_click),
#     ),
#     state=StartSG.main_menu,
# )

# start_dialog = Dialog(
#     ask_contact_window,
#     main_menu_window,
# )
